#!/usr/bin/env bash

set -o errexit
set -o nounset

declare -r debug='false'
declare -r tmpfile_file="/tmp/publish.$$.tmpfiles"

function make_temp_file
{
    local template="${1:-publish.$$.XXXXXX}"
    if [[ $template != *XXXXXX ]]
    then
        template="$template.XXXXXX"
    fi
    local tmp=$(mktemp -t "$template")
    echo "$tmp" >> "$tmpfile_file"
    echo "$tmp"
}

function now
{
    date '+%Y-%m-%d %H:%M:%S'
}

function pwarn
{
    echo "$(now) [warning]: $@" 1>&2
}

function perr
{
    echo "$(now) [error]: $@" 1>&2
}

function pinfo
{
    echo "$(now) [info]: $@"
}

function pdebug
{
    if [[ $debug == 'true' ]]
    then
        echo "$(now) [debug]: $@"
    fi
}

function errexit
{
    perr "$@"
    exit 1
}

function onexit
{
    for tmpfile in $(< $tmpfile_file)
    do
        pdebug "removing temp file $tmpfile"
        rm -f $tmpfile
    done
    rm -f $tmpfile_file
}

trap onexit EXIT

declare -r version_string="${1:-unknown}"

if [[ $version_string != [0-9].[0-9].[0-9] ]]
then
    errexit 'first argument must be valid version string in X.Y.Z format'
fi

declare -r current_branch="$(git rev-parse --abbrev-ref HEAD)"

if [[ $debug == 'false' && $current_branch != 'master' ]]
then
    errexit 'publish must be run on master branch'
fi

declare -r github_api_key_file="$HOME/.ghapi"
if [[ ! -s $github_api_key_file ]]
then
    errexit "please save your GitHub API token in $github_api_key_file"
fi

# Validate commands
if ! hash curl 2>/dev/null
then
    errexit "'curl' must be in your PATH"
fi

if ! hash npm 2>/dev/null
then
    errexit "'npm' must be in your PATH"
fi

npm version "$version_string"

npm publish

git push --tags
git push

npm pack

npm_package="basho-riak-client2-$version_string.tgz"
if [[ ! -s $npm_package ]]
then
    errexit "expected to find $npm_package in $PWD"
fi

# NB: npm publish creates a vX.Y.Z tag
declare -r release_json="{
    \"tag_name\" : \"v$version_string\",
    \"name\" : \"Riak NodeJS Client $version_string\",
    \"body\" : \"riak-nodejs-client $version_string\nhttps://github.com/dougluce/riak-nodejs-client/blob/master/RELNOTES.md\",
    \"draft\" : false,
    \"prerelease\" : false
}"

pdebug "Release JSON: $release_json"

curl_content_file="$(make_temp_file)"
curl_stdout_file="$(make_temp_file)"
curl_stderr_file="$(make_temp_file)"

curl -4so $curl_content_file -w '%{http_code}' -XPOST \
    -H "Authorization: token $(< $github_api_key_file)" -H 'Content-type: application/json' \
    'https://api.github.com/repos/dougluce/riak-nodejs-client/releases' -d "$release_json" 1> "$curl_stdout_file" 2> "$curl_stderr_file"
if [[ $? != 0 ]]
then
    errexit "curl error exited with code: '$?' see '$curl_stderr_file'"
fi

declare -i curl_rslt="$(< $curl_stdout_file)"
if (( curl_rslt == 422 ))
then
    pwarn "Release in GitHub already exists! (http code: '$curl_rslt')"
elif (( curl_rslt != 201 ))
then
    errexit "Creating release in GitHub failed with http code '$curl_rslt'"
fi

if [[ ! -s $curl_content_file ]]
then
    errexit 'no release info to parse for asset uploads'
fi

# "upload_url": "https://uploads.github.com/repos/dougluce/riak-nodejs-client/releases/1115734/assets{?name}"
# https://uploads.github.com/repos/basho/riak-nodejs-client/releases/1115734/assets{?name}
declare -r upload_url_with_name=$(perl -ne 'print qq($1\n) and exit if /"upload_url"[ :]+"(https:\/\/[^"]+)"/' "$curl_content_file")
declare -r upload_url="${upload_url_with_name/\{?name\}/?name=$npm_package}"

curl_content_file="$(make_temp_file)"
curl_stdout_file="$(make_temp_file)"
curl_stderr_file="$(make_temp_file)"

curl -4so $curl_content_file -w '%{http_code}' -XPOST \
    -H "Authorization: token $(< $github_api_key_file)" -H 'Content-type: application/x-compressed, application/x-tar' \
    "$upload_url" --data-binary "@$npm_package" 1> "$curl_stdout_file" 2> "$curl_stderr_file"
if [[ $? != 0 ]]
then
    errexit "curl error exited with code: '$?' see '$curl_stderr_file'"
fi

declare -i curl_rslt="$(< $curl_stdout_file)"
if (( curl_rslt != 201 ))
then
    errexit "Uploading release assets to GitHub failed with http code '$curl_rslt'"
fi

